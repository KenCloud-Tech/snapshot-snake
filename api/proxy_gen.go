// Code generated by github.com/londobell/tool/genapi. DO NOT EDIT.

package api

import (
	"context"
	"github.com/filecoin-project/lotus/chain/types"
	"github.com/ipfs/go-cid"
	"golang.org/x/xerrors"
)

var ErrNotSupported = xerrors.New("method not supported")

type FilFilAPIStruct struct {
	Internal struct {
		ChainGetTipSet func(p0 context.Context, p1 types.TipSetKey) (*types.TipSet, error) ``

		FilFilDagExport func(p0 context.Context, p1 *types.TipSet) (<-chan []byte, error) ``

		GetDagNode func() ([]cid.Cid, error) ``
	}
}

type FilFilAPIStub struct {
}

func (s *FilFilAPIStruct) ChainGetTipSet(p0 context.Context, p1 types.TipSetKey) (*types.TipSet, error) {
	if s.Internal.ChainGetTipSet == nil {
		return nil, ErrNotSupported
	}
	return s.Internal.ChainGetTipSet(p0, p1)
}

func (s *FilFilAPIStub) ChainGetTipSet(p0 context.Context, p1 types.TipSetKey) (*types.TipSet, error) {
	return nil, ErrNotSupported
}

func (s *FilFilAPIStruct) FilFilDagExport(p0 context.Context, p1 *types.TipSet) (<-chan []byte, error) {
	if s.Internal.FilFilDagExport == nil {
		return nil, ErrNotSupported
	}
	return s.Internal.FilFilDagExport(p0, p1)
}

func (s *FilFilAPIStub) FilFilDagExport(p0 context.Context, p1 *types.TipSet) (<-chan []byte, error) {
	return nil, ErrNotSupported
}

func (s *FilFilAPIStruct) GetDagNode() ([]cid.Cid, error) {
	if s.Internal.GetDagNode == nil {
		return *new([]cid.Cid), ErrNotSupported
	}
	return s.Internal.GetDagNode()
}

func (s *FilFilAPIStub) GetDagNode() ([]cid.Cid, error) {
	return *new([]cid.Cid), ErrNotSupported
}

var _ FilFilAPI = new(FilFilAPIStruct)
